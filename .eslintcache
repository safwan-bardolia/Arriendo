[{"C:\\react\\arriendo\\src\\index.js":"1","C:\\react\\arriendo\\src\\serviceWorker.js":"2","C:\\react\\arriendo\\src\\app\\store.js":"3","C:\\react\\arriendo\\src\\components\\App.js":"4","C:\\react\\arriendo\\src\\features\\userSlice.js":"5","C:\\react\\arriendo\\src\\firebase.js":"6","C:\\react\\arriendo\\src\\components\\Login.js":"7","C:\\react\\arriendo\\src\\components\\Nav.js":"8","C:\\react\\arriendo\\src\\components\\Banner.js":"9","C:\\react\\arriendo\\src\\api\\hostingApi.js":"10","C:\\react\\arriendo\\src\\components\\Map.js":"11","C:\\react\\arriendo\\src\\components\\HostingForm.js":"12","C:\\react\\arriendo\\src\\features\\positionSlice.js":"13","C:\\react\\arriendo\\src\\components\\Footer.js":"14","C:\\react\\arriendo\\src\\components\\Home.js":"15","C:\\react\\arriendo\\src\\components\\Card.js":"16","C:\\react\\arriendo\\src\\components\\HostingInfo.js":"17","C:\\react\\arriendo\\src\\components\\HostMain.js":"18","C:\\react\\arriendo\\src\\components\\HostingProfile.js":"19","C:\\react\\arriendo\\src\\api\\hostingLocationApi.js":"20","C:\\react\\arriendo\\src\\components\\ProfileMap.js":"21","C:\\react\\arriendo\\src\\components\\UpdateMap.js":"22"},{"size":655,"mtime":1608878335259,"results":"23","hashOfConfig":"24"},{"size":5141,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":273,"mtime":1611250233022,"results":"26","hashOfConfig":"24"},{"size":2970,"mtime":1620414072025,"results":"27","hashOfConfig":"24"},{"size":978,"mtime":1608878157204,"results":"28","hashOfConfig":"24"},{"size":927,"mtime":1619893241441,"results":"29","hashOfConfig":"24"},{"size":1650,"mtime":1610361977006,"results":"30","hashOfConfig":"24"},{"size":2164,"mtime":1620410437409,"results":"31","hashOfConfig":"24"},{"size":427,"mtime":1609954424903,"results":"32","hashOfConfig":"24"},{"size":101,"mtime":1609237294150,"results":"33","hashOfConfig":"24"},{"size":6142,"mtime":1620553402589,"results":"34","hashOfConfig":"24"},{"size":22678,"mtime":1620727617843,"results":"35","hashOfConfig":"24"},{"size":850,"mtime":1609609979086,"results":"36","hashOfConfig":"24"},{"size":283,"mtime":1609940588285,"results":"37","hashOfConfig":"24"},{"size":2309,"mtime":1609956233507,"results":"38","hashOfConfig":"24"},{"size":402,"mtime":1609955733447,"results":"39","hashOfConfig":"24"},{"size":331,"mtime":1610272335876,"results":"40","hashOfConfig":"24"},{"size":5972,"mtime":1620370468222,"results":"41","hashOfConfig":"24"},{"size":9779,"mtime":1620731077342,"results":"42","hashOfConfig":"24"},{"size":101,"mtime":1620327187557,"results":"43","hashOfConfig":"24"},{"size":3625,"mtime":1620457316318,"results":"44","hashOfConfig":"24"},{"size":3999,"mtime":1620465242294,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"5ly33s",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},"C:\\react\\arriendo\\src\\index.js",[],["94","95"],"C:\\react\\arriendo\\src\\serviceWorker.js",[],"C:\\react\\arriendo\\src\\app\\store.js",[],"C:\\react\\arriendo\\src\\components\\App.js",[],"C:\\react\\arriendo\\src\\features\\userSlice.js",[],"C:\\react\\arriendo\\src\\firebase.js",[],"C:\\react\\arriendo\\src\\components\\Login.js",[],"C:\\react\\arriendo\\src\\components\\Nav.js",[],"C:\\react\\arriendo\\src\\components\\Banner.js",[],"C:\\react\\arriendo\\src\\api\\hostingApi.js",[],"C:\\react\\arriendo\\src\\components\\Map.js",["96","97","98"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport './Map.css'\r\n\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\r\nimport * as MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\r\nimport { selectLat, selectLng } from '../features/positionSlice';\r\nimport { selectUser } from '../features/userSlice';\r\nimport hostingLocationApi from '../api/hostingLocationApi';\r\nimport { useHistory } from 'react-router';\r\nimport hostingApi from '../api/hostingApi';\r\n\r\nmapboxgl.workerClass = MapboxWorker;\r\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2Fmd2FuLWJhcmRvbGlhIiwiYSI6ImNrb2IwaXI5MzAzYnkydm4xZWg4eDFkbmoifQ.2JbbEHLeVd5Y1BcuVHAyyQ';\r\n\r\nfunction Map() {\r\n\r\n    const mapContainer = useRef();\r\n\r\n\t\t// to track the url\r\n\t\tconst history = useHistory();\r\n\r\n    // get the userinfo from userSlice\r\n    const user = useSelector(selectUser);\r\n\r\n    // get the coordinates from positionSlice\r\n    // const latitude = useSelector(selectLat);\r\n    // const longitude = useSelector(selectLng);\r\n\r\n    // create state for lat & lng (because in this component lat & lng will change frequently. e.g as marker move)\r\n    // get default value from slice\r\n    const [lat,setLat] = useState(useSelector(selectLat));\r\n    const [lng,setLng] = useState(useSelector(selectLng));\r\n    const [zoom, setZoom] = useState(9);\r\n\r\n    // update when we get new users location (using gps)\r\n    const [renderMap, setRenderMap] = useState(false);\t\r\n\r\n    useEffect(()=>{\r\n\r\n\t\t\t// first check if the current user has submitted hosting info or not?\r\n\t\t\t// this is useful when user direct backdoor to the 'hosting/map' url\r\n\t\t\tasync function checkHosting() {\r\n\t\t\t\thostingApi.get(`/hostings/${user.uid}`)\r\n\t\t\t\t.then(resp=>{\r\n\t\t\t\t\tconsole.log(resp)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err=>{\r\n\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t\t// if hosting data is not submitted then send user back to hostingForm\r\n\t\t\t\t\talert(`you have not submitted hosting info. first fill the hosting form`);\r\n\t\t\t\t\thistory.push('/hosting/form');\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tcheckHosting();\r\n\r\n\t\t\t// check if user has already submitted location or not?\r\n\t\t\tasync function checkLocation() {\r\n\t\t\t\thostingLocationApi.get(`/hostinglocations/${user.uid}`)\r\n\t\t\t\t.then(resp=>{\r\n\t\t\t\t\tconsole.log(resp);\r\n\t\t\t\t\t// if location is already been submitted by this user then move to next component\r\n\t\t\t\t\talert(`you have already add the location , try to update it ${resp.data.fullName}`);\r\n\t\t\t\t\thistory.push(\"/mapprofile\")\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err=>{\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tcheckLocation();\r\n\r\n\t\t\t// this function causes this component to render 2 times(because of setRenderMap())\r\n      // // get user's location\r\n      // window.navigator.geolocation.getCurrentPosition(\r\n\t\t\t// \t(position) => (\r\n\t\t\t// \t\tconsole.log(position.coords),\r\n\t\t\t// \t\tsetLat(position.coords.latitude.toFixed(4)),\r\n\t\t\t// \t\tsetLng(position.coords.longitude.toFixed(4)),\r\n\t\t\t\t\t\r\n\t\t\t// \t\t// without this center is not updated\r\n\t\t\t// \t\tsetRenderMap(true)\r\n\t\t\t// \t),\r\n\t\t\t// \t(err) => (\r\n\t\t\t// \t\tconsole.log(\"error in getting location\")\r\n\t\t\t// \t)\r\n    \t// )\r\n\r\n\r\n\t\t\t// initialize the map\r\n\t\t\tconst map = new mapboxgl.Map({\r\n\t\t\t\t\tcontainer: mapContainer.current,\r\n\t\t\t\t\tstyle: 'mapbox://styles/mapbox/streets-v11',\r\n\t\t\t\t\tcenter: [lng, lat],\r\n\t\t\t\t\tzoom: zoom\r\n\t\t\t});\r\n\r\n\t\t\t// add marker for default location\r\n\t\t\tconst marker = new mapboxgl.Marker({\r\n\t\t\t\t\tdraggable: true\r\n\t\t\t})\r\n\t\t\t.setLngLat([lng,lat])\r\n\t\t\t.addTo(map);\r\n\r\n\t\t\t// add draggable functionality\r\n\t\t\tmarker.on('drag',()=>{\r\n\t\t\t\t\tconst coordinates = marker.getLngLat();\r\n\t\t\t\t\t// updating co-ordinates on dragging\r\n\t\t\t\t\tsetLat(coordinates.lat.toFixed(4));\r\n\t\t\t\t\tsetLng(coordinates.lng.toFixed(4));\r\n\t\t\t})\r\n\r\n\t\t\t// to search places in map (after search center will be resultant lat & lng )\r\n\t\t\tconst geocoder = new MapboxGeocoder({\r\n\t\t\t\t\taccessToken: mapboxgl.accessToken,\r\n\t\t\t\t\tmapboxgl: mapboxgl,\r\n\t\t\t\t\t// not to display new marker\r\n\t\t\t\t\tmarker: false\r\n\t\t\t});\r\n\r\n\t\t\tmap.addControl(geocoder,'top-left')\r\n\r\n\t\t\tgeocoder.on('result',(e)=>{\r\n\t\t\t\tconsole.log(e.result);\r\n\r\n\t\t\t\t// update lat & lng\r\n\t\t\t\tsetLng(e.result.center[0]);\r\n\t\t\t\tsetLat(e.result.center[1]);\r\n\r\n\t\t\t\t// remove the old marker\r\n\t\t\t\tmarker.remove();\r\n\t\t\t\t\r\n\t\t\t\t// re-add the new marker\r\n\t\t\t\tconst marker1 = new mapboxgl.Marker({\r\n\t\t\t\t\t\tdraggable: true\r\n\t\t\t\t})\r\n\t\t\t\t.setLngLat(e.result.center)\r\n\t\t\t\t.addTo(map);\t\r\n\r\n\t\t\t\tmarker1.on('drag',()=>{\r\n\t\t\t\t\t\tconst coordinates = marker1.getLngLat();\r\n\t\t\t\t\t\t// updating co-ordinates on dragging\r\n\t\t\t\t\t\tsetLat(coordinates.lat.toFixed(4));\r\n\t\t\t\t\t\tsetLng(coordinates.lng.toFixed(4));\r\n\t\t\t\t})\r\n\r\n\t\t\t})\r\n\r\n        // unmounting\r\n        return () => map.remove();\r\n\r\n    },[renderMap])\r\n\r\n\t\tconst handleSubmit = (e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\t\r\n\t\t\t// ******** post the data to backend **********\r\n\t\t\tconst formInfo = new FormData();\r\n\t\t\tformInfo.append('uid',user.uid);\r\n\t\t\tformInfo.append('email',user.email);\r\n\t\t\tformInfo.append('fullName',user.displayName);\r\n\t\t\tformInfo.append('latitude',lat);\r\n\t\t\tformInfo.append('longitude',lng);\r\n\r\n\t\t\tif(window.confirm(\"are you sure that this is your confirm hosting location?\")) {\r\n\t\t\t\t// **** posting to backend ****\r\n\t\t\t\thostingLocationApi.post('/hostinglocations', formInfo)\r\n\t\t\t\t.then(res=>{\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\talert(\"location successfully added\");\r\n\t\t\t\t\thistory.push(\"/profile\")\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err=>{\r\n\t\t\t\t\talert(err.message)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n    return (\r\n        <div className=\"map\">\r\n\t\t\t\t\t\t<div className=\"map__header\">\r\n\t\t\t\t\t\t\tmove marker to select your confirm location<br/>\r\n\t\t\t\t\t\t\tor<br/>\r\n\t\t\t\t\t\t\tsearch a place to confirm your location\r\n\t\t\t\t\t\t</div>\r\n            <div className=\"map__sidebar\">\r\n                Latitude: {lat} | Longitude: {lng} | Zoom: {zoom}\r\n            </div>\r\n            <div className=\"map__container\" ref={mapContainer}/>\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit} noValidate>\r\n\t\t\t\t\t\t\t<button className=\"map__button\" type=\"submit\">submit location</button>\r\n\t\t\t\t\t\t</form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","C:\\react\\arriendo\\src\\components\\HostingForm.js",[],"C:\\react\\arriendo\\src\\features\\positionSlice.js",[],"C:\\react\\arriendo\\src\\components\\Footer.js",[],"C:\\react\\arriendo\\src\\components\\Home.js",[],"C:\\react\\arriendo\\src\\components\\Card.js",[],"C:\\react\\arriendo\\src\\components\\HostingInfo.js",[],"C:\\react\\arriendo\\src\\components\\HostMain.js",[],"C:\\react\\arriendo\\src\\components\\HostingProfile.js",[],"C:\\react\\arriendo\\src\\api\\hostingLocationApi.js",[],"C:\\react\\arriendo\\src\\components\\ProfileMap.js",["99"],"import { Button } from '@material-ui/core';\r\nimport { CheckSharp, Lock, SupervisedUserCircle } from '@material-ui/icons';\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router'\r\nimport hostingLocationApi from '../api/hostingLocationApi';\r\nimport { selectUser } from '../features/userSlice';\r\nimport Footer from './Footer';\r\nimport HostingInfo from './HostingInfo';\r\nimport './ProfileMap.css'\r\nimport UpdateMap from './UpdateMap';\r\n\r\n\r\nfunction ProfileMap() {\r\n\r\n  // to keep track of url\r\n  const history = useHistory();\r\n\r\n  const[locationData, setLocationData] = useState(null);\r\n\r\n  // this will rerender compponent (i.e after update)\r\n  const[render, setRender] = useState(false);\r\n\r\n  const user = useSelector(selectUser);\r\n\r\n  useEffect(()=>{\r\n    // if location is not present in db then catch function will called & locationData will remain null\r\n    async function getLocation() {\r\n      hostingLocationApi.get(`/hostinglocations/${user.uid}`)\r\n      .then(resp=>{\r\n        console.log(resp.data);\r\n        setLocationData(resp.data);\r\n      })\r\n      .catch(err=>{\r\n        console.log(err);\r\n      })  \r\n    }\r\n    getLocation();\r\n  },[user.uid,render])\r\n\r\n  // delete location\r\n  const deleteLocation = () => {\r\n    if(window.confirm(`${user.displayName}, do you want to delete your location`)) {\r\n      hostingLocationApi.delete(`/hostinglocations/${user.uid}`)\r\n      .then(resp=>{\r\n        console.log(resp);\r\n        // without this component will not re-render\r\n        setLocationData(null);\r\n        alert(\"location deleted successfully\")\r\n      })\r\n      .catch(err=>{\r\n        console.log(err)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"profilemap\">\r\n      {locationData?(\r\n        <>\r\n          <div className=\"profilemap__top\">\r\n            <div className=\"profilemap__topleft\">\r\n                <h1>Profile</h1>\r\n                <h4>{user.email}.</h4>\r\n            </div>\r\n            <Button onClick={deleteLocation}>\r\n                delete location\r\n            </Button>\r\n          </div>\r\n          <UpdateMap locationData={locationData}/>\r\n        </>\r\n      ):(\r\n        <>\r\n          <div className=\"not__register\">\r\n            \r\n            <div className=\"not__register__top\">\r\n              <h4>you have not added your location yet</h4>\r\n                                \r\n              <Button onClick={()=>history.push(\"/hosting/map\")}>\r\n                  add location\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"hosting__info\">\r\n              <HostingInfo\r\n                  Icon={SupervisedUserCircle} \r\n                  title=\"Trust & Safety\"\r\n                  info=\"Trust & safety tools help you accept a booking only if you’re 100% comfortable.\"\r\n              />\r\n              <HostingInfo\r\n                  Icon={CheckSharp} \r\n                  title=\"Host Guarantee\"\r\n                  info=\"Your peace of mind is priceless. So we don’t charge for it. Every eligible booking on Makent is covered by our Host Guarantee - at no additional cost to you.\"\r\n              />\r\n              <HostingInfo \r\n                  Icon={Lock} \r\n                  title=\"Secure payments\"\r\n                  info=\"Our fast, flexible payment system puts money in your bank account after guests check out.\"\r\n                  last=\"last\"\r\n              />\r\n            </div>\r\n                        \r\n          </div>\r\n          <Footer/>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileMap\r\n","C:\\react\\arriendo\\src\\components\\UpdateMap.js",["100","101"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport './UpdateMap.css'\r\n\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\r\nimport * as MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport hostingLocationApi from '../api/hostingLocationApi';\r\n\r\nmapboxgl.workerClass = MapboxWorker;\r\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2Fmd2FuLWJhcmRvbGlhIiwiYSI6ImNrb2IwaXI5MzAzYnkydm4xZWg4eDFkbmoifQ.2JbbEHLeVd5Y1BcuVHAyyQ';\r\n\r\nfunction UpdateMap({locationData}) {\r\n\r\n  const mapContainer = useRef();\r\n\r\n  // get the userinfo from userSlice\r\n  const user = useSelector(selectUser);\r\n\r\n  const [lat,setLat] = useState(locationData.latitude);\r\n  const [lng,setLng] = useState(locationData.longitude);\r\n  const [zoom, setZoom] = useState(9);\r\n\r\n  useEffect(()=>{\r\n    // initialize the map\r\n\t\tconst map = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      style: 'mapbox://styles/mapbox/streets-v11',\r\n      center: [lng, lat],\r\n      zoom: zoom\r\n    });\r\n\r\n    // add marker for default location\r\n    const marker = new mapboxgl.Marker({\r\n      draggable: true\r\n    })\r\n    .setLngLat([lng,lat])\r\n    .addTo(map);\r\n\r\n    // add draggable functionality\r\n    marker.on('drag',()=>{\r\n      const coordinates = marker.getLngLat();\r\n      // updating co-ordinates on dragging\r\n      setLat(coordinates.lat.toFixed(4));\r\n      setLng(coordinates.lng.toFixed(4));\r\n    })\r\n\r\n    // to search places in map (after search center will be resultant lat & lng )\r\n    const geocoder = new MapboxGeocoder({\r\n      accessToken: mapboxgl.accessToken,\r\n      mapboxgl: mapboxgl,\r\n      // not to display new marker\r\n      marker: false\r\n    });\r\n\r\n    map.addControl(geocoder,'top-left')\r\n\r\n    geocoder.on('result',(e)=>{\r\n      console.log(e.result);\r\n\r\n      // update lat & lng\r\n      setLng(e.result.center[0]);\r\n      setLat(e.result.center[1]);\r\n\r\n      // remove the old marker\r\n      marker.remove();\r\n      \r\n      // re-add the new marker\r\n      const marker1 = new mapboxgl.Marker({\r\n          draggable: true\r\n      })\r\n      .setLngLat(e.result.center)\r\n      .addTo(map);\t\r\n\r\n      marker1.on('drag',()=>{\r\n        const coordinates = marker1.getLngLat();\r\n        // updating co-ordinates on dragging\r\n        setLat(coordinates.lat.toFixed(4));\r\n        setLng(coordinates.lng.toFixed(4));\r\n      })\r\n\r\n    })\r\n\r\n    // unmounting\r\n    return () => map.remove();\r\n\r\n  },[])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // ******** update the data to backend **********\r\n    const formInfo = new FormData();\r\n    formInfo.append('uid',user.uid);\r\n    formInfo.append('email',user.email);\r\n    formInfo.append('fullName',user.displayName);\r\n    formInfo.append('latitude',lat);\r\n    formInfo.append('longitude',lng);\r\n\r\n    if(window.confirm(\"are you sure that you wants to update your hosting location?\")) {\r\n      // **** updating to backend ****\r\n      hostingLocationApi.put('/hostinglocations', formInfo)\r\n      .then(res=>{\r\n        console.log(res);\r\n        alert(\"location updated successfully\");\r\n      })\r\n      .catch(err=>{\r\n        alert(err.message)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"updateMap\">\r\n      {/* <div className=\"updateMap__header\">\r\n        move marker to select your confirm location<br/>\r\n        or<br/>\r\n        search a place to confirm your location\r\n      </div> */}\r\n      <div className=\"updateMap__sidebar\">\r\n          Latitude: {lat} | Longitude: {lng} | Zoom: {zoom}\r\n      </div>\r\n      <div className=\"updateMap__container\" ref={mapContainer}/>\r\n      <form onSubmit={handleSubmit} noValidate>\r\n        <button className=\"updateMap__button\" type=\"submit\">update location</button>\r\n      </form>      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateMap\r\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":36,"column":18,"nodeType":"108","messageId":"109","endLine":36,"endColumn":25},{"ruleId":"106","severity":1,"message":"110","line":39,"column":23,"nodeType":"108","messageId":"109","endLine":39,"endColumn":35},{"ruleId":"111","severity":1,"message":"112","line":155,"column":7,"nodeType":"113","endLine":155,"endColumn":18,"suggestions":"114"},{"ruleId":"106","severity":1,"message":"115","line":24,"column":17,"nodeType":"108","messageId":"109","endLine":24,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":24,"column":16,"nodeType":"108","messageId":"109","endLine":24,"endColumn":23},{"ruleId":"111","severity":1,"message":"116","line":89,"column":5,"nodeType":"113","endLine":89,"endColumn":7,"suggestions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'setZoom' is assigned a value but never used.","Identifier","unusedVar","'setRenderMap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'lat', 'lng', 'user.uid', and 'zoom'. Either include them or remove the dependency array.","ArrayExpression",["120"],"'setRender' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'lat', 'lng', and 'zoom'. Either include them or remove the dependency array.",["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [history, lat, lng, renderMap, user.uid, zoom]",{"range":"126","text":"127"},"Update the dependencies array to be: [lat, lng, zoom]",{"range":"128","text":"129"},[4791,4802],"[history, lat, lng, renderMap, user.uid, zoom]",[2628,2630],"[lat, lng, zoom]"]