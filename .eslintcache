[{"C:\\react\\arriendo\\src\\index.js":"1","C:\\react\\arriendo\\src\\serviceWorker.js":"2","C:\\react\\arriendo\\src\\app\\store.js":"3","C:\\react\\arriendo\\src\\components\\App.js":"4","C:\\react\\arriendo\\src\\features\\userSlice.js":"5","C:\\react\\arriendo\\src\\firebase.js":"6","C:\\react\\arriendo\\src\\components\\Login.js":"7","C:\\react\\arriendo\\src\\components\\Nav.js":"8","C:\\react\\arriendo\\src\\components\\Banner.js":"9","C:\\react\\arriendo\\src\\api\\hostingApi.js":"10","C:\\react\\arriendo\\src\\components\\Map.js":"11","C:\\react\\arriendo\\src\\components\\HostingForm.js":"12","C:\\react\\arriendo\\src\\features\\positionSlice.js":"13","C:\\react\\arriendo\\src\\components\\Footer.js":"14","C:\\react\\arriendo\\src\\components\\Home.js":"15","C:\\react\\arriendo\\src\\components\\Card.js":"16","C:\\react\\arriendo\\src\\components\\HostingInfo.js":"17","C:\\react\\arriendo\\src\\components\\HostMain.js":"18","C:\\react\\arriendo\\src\\components\\HostingProfile.js":"19","C:\\react\\arriendo\\src\\api\\hostingLocationApi.js":"20","C:\\react\\arriendo\\src\\components\\ProfileMap.js":"21","C:\\react\\arriendo\\src\\components\\UpdateMap.js":"22","C:\\react\\arriendo\\src\\components\\NearbyLocation.js":"23","C:\\react\\arriendo\\src\\components\\Booking.js":"24","C:\\react\\arriendo\\src\\components\\ConfirmBooking.js":"25","C:\\react\\arriendo\\src\\api\\myBookingApi.js":"26","C:\\react\\arriendo\\src\\components\\MyBooking.js":"27","C:\\react\\arriendo\\src\\api\\myHostingClientApi.js":"28","C:\\react\\arriendo\\src\\components\\MyHostingClient.js":"29","C:\\react\\arriendo\\src\\components\\MyHostingClientResult.js":"30"},{"size":655,"mtime":1608878335259,"results":"31","hashOfConfig":"32"},{"size":5141,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":273,"mtime":1611250233022,"results":"34","hashOfConfig":"32"},{"size":3945,"mtime":1622012864678,"results":"35","hashOfConfig":"32"},{"size":978,"mtime":1608878157204,"results":"36","hashOfConfig":"32"},{"size":927,"mtime":1619893241441,"results":"37","hashOfConfig":"32"},{"size":1571,"mtime":1621666028725,"results":"38","hashOfConfig":"32"},{"size":2311,"mtime":1622013860023,"results":"39","hashOfConfig":"32"},{"size":584,"mtime":1621515073212,"results":"40","hashOfConfig":"32"},{"size":101,"mtime":1609237294150,"results":"41","hashOfConfig":"32"},{"size":6142,"mtime":1620553402589,"results":"42","hashOfConfig":"32"},{"size":22678,"mtime":1620727617843,"results":"43","hashOfConfig":"32"},{"size":850,"mtime":1609609979086,"results":"44","hashOfConfig":"32"},{"size":283,"mtime":1609940588285,"results":"45","hashOfConfig":"32"},{"size":2309,"mtime":1609956233507,"results":"46","hashOfConfig":"32"},{"size":402,"mtime":1609955733447,"results":"47","hashOfConfig":"32"},{"size":331,"mtime":1610272335876,"results":"48","hashOfConfig":"32"},{"size":5972,"mtime":1620370468222,"results":"49","hashOfConfig":"32"},{"size":9779,"mtime":1620731077342,"results":"50","hashOfConfig":"32"},{"size":101,"mtime":1620327187557,"results":"51","hashOfConfig":"32"},{"size":3625,"mtime":1620457316318,"results":"52","hashOfConfig":"32"},{"size":4000,"mtime":1621515073229,"results":"53","hashOfConfig":"32"},{"size":17422,"mtime":1621936516803,"results":"54","hashOfConfig":"32"},{"size":5454,"mtime":1621936585304,"results":"55","hashOfConfig":"32"},{"size":14742,"mtime":1621937119764,"results":"56","hashOfConfig":"32"},{"size":101,"mtime":1621924927708,"results":"57","hashOfConfig":"32"},{"size":4899,"mtime":1622114256887,"results":"58","hashOfConfig":"32"},{"size":101,"mtime":1621936311261,"results":"59","hashOfConfig":"32"},{"size":2739,"mtime":1622265971914,"results":"60","hashOfConfig":"32"},{"size":822,"mtime":1622266652472,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"5ly33s",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\react\\arriendo\\src\\index.js",[],["129","130"],"C:\\react\\arriendo\\src\\serviceWorker.js",[],"C:\\react\\arriendo\\src\\app\\store.js",[],"C:\\react\\arriendo\\src\\components\\App.js",[],"C:\\react\\arriendo\\src\\features\\userSlice.js",[],"C:\\react\\arriendo\\src\\firebase.js",[],"C:\\react\\arriendo\\src\\components\\Login.js",[],"C:\\react\\arriendo\\src\\components\\Nav.js",[],"C:\\react\\arriendo\\src\\components\\Banner.js",[],"C:\\react\\arriendo\\src\\api\\hostingApi.js",[],"C:\\react\\arriendo\\src\\components\\Map.js",["131","132","133"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport './Map.css'\r\n\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\r\nimport * as MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\r\nimport { selectLat, selectLng } from '../features/positionSlice';\r\nimport { selectUser } from '../features/userSlice';\r\nimport hostingLocationApi from '../api/hostingLocationApi';\r\nimport { useHistory } from 'react-router';\r\nimport hostingApi from '../api/hostingApi';\r\n\r\nmapboxgl.workerClass = MapboxWorker;\r\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2Fmd2FuLWJhcmRvbGlhIiwiYSI6ImNrb2IwaXI5MzAzYnkydm4xZWg4eDFkbmoifQ.2JbbEHLeVd5Y1BcuVHAyyQ';\r\n\r\nfunction Map() {\r\n\r\n    const mapContainer = useRef();\r\n\r\n\t\t// to track the url\r\n\t\tconst history = useHistory();\r\n\r\n    // get the userinfo from userSlice\r\n    const user = useSelector(selectUser);\r\n\r\n    // get the coordinates from positionSlice\r\n    // const latitude = useSelector(selectLat);\r\n    // const longitude = useSelector(selectLng);\r\n\r\n    // create state for lat & lng (because in this component lat & lng will change frequently. e.g as marker move)\r\n    // get default value from slice\r\n    const [lat,setLat] = useState(useSelector(selectLat));\r\n    const [lng,setLng] = useState(useSelector(selectLng));\r\n    const [zoom, setZoom] = useState(9);\r\n\r\n    // update when we get new users location (using gps)\r\n    const [renderMap, setRenderMap] = useState(false);\t\r\n\r\n    useEffect(()=>{\r\n\r\n\t\t\t// first check if the current user has submitted hosting info or not?\r\n\t\t\t// this is useful when user direct backdoor to the 'hosting/map' url\r\n\t\t\tasync function checkHosting() {\r\n\t\t\t\thostingApi.get(`/hostings/${user.uid}`)\r\n\t\t\t\t.then(resp=>{\r\n\t\t\t\t\tconsole.log(resp)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err=>{\r\n\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t\t// if hosting data is not submitted then send user back to hostingForm\r\n\t\t\t\t\talert(`you have not submitted hosting info. first fill the hosting form`);\r\n\t\t\t\t\thistory.push('/hosting/form');\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tcheckHosting();\r\n\r\n\t\t\t// check if user has already submitted location or not?\r\n\t\t\tasync function checkLocation() {\r\n\t\t\t\thostingLocationApi.get(`/hostinglocations/${user.uid}`)\r\n\t\t\t\t.then(resp=>{\r\n\t\t\t\t\tconsole.log(resp);\r\n\t\t\t\t\t// if location is already been submitted by this user then move to next component\r\n\t\t\t\t\talert(`you have already add the location , try to update it ${resp.data.fullName}`);\r\n\t\t\t\t\thistory.push(\"/mapprofile\")\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err=>{\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tcheckLocation();\r\n\r\n\t\t\t// this function causes this component to render 2 times(because of setRenderMap())\r\n      // // get user's location\r\n      // window.navigator.geolocation.getCurrentPosition(\r\n\t\t\t// \t(position) => (\r\n\t\t\t// \t\tconsole.log(position.coords),\r\n\t\t\t// \t\tsetLat(position.coords.latitude.toFixed(4)),\r\n\t\t\t// \t\tsetLng(position.coords.longitude.toFixed(4)),\r\n\t\t\t\t\t\r\n\t\t\t// \t\t// without this center is not updated\r\n\t\t\t// \t\tsetRenderMap(true)\r\n\t\t\t// \t),\r\n\t\t\t// \t(err) => (\r\n\t\t\t// \t\tconsole.log(\"error in getting location\")\r\n\t\t\t// \t)\r\n    \t// )\r\n\r\n\r\n\t\t\t// initialize the map\r\n\t\t\tconst map = new mapboxgl.Map({\r\n\t\t\t\t\tcontainer: mapContainer.current,\r\n\t\t\t\t\tstyle: 'mapbox://styles/mapbox/streets-v11',\r\n\t\t\t\t\tcenter: [lng, lat],\r\n\t\t\t\t\tzoom: zoom\r\n\t\t\t});\r\n\r\n\t\t\t// add marker for default location\r\n\t\t\tconst marker = new mapboxgl.Marker({\r\n\t\t\t\t\tdraggable: true\r\n\t\t\t})\r\n\t\t\t.setLngLat([lng,lat])\r\n\t\t\t.addTo(map);\r\n\r\n\t\t\t// add draggable functionality\r\n\t\t\tmarker.on('drag',()=>{\r\n\t\t\t\t\tconst coordinates = marker.getLngLat();\r\n\t\t\t\t\t// updating co-ordinates on dragging\r\n\t\t\t\t\tsetLat(coordinates.lat.toFixed(4));\r\n\t\t\t\t\tsetLng(coordinates.lng.toFixed(4));\r\n\t\t\t})\r\n\r\n\t\t\t// to search places in map (after search center will be resultant lat & lng )\r\n\t\t\tconst geocoder = new MapboxGeocoder({\r\n\t\t\t\t\taccessToken: mapboxgl.accessToken,\r\n\t\t\t\t\tmapboxgl: mapboxgl,\r\n\t\t\t\t\t// not to display new marker\r\n\t\t\t\t\tmarker: false\r\n\t\t\t});\r\n\r\n\t\t\tmap.addControl(geocoder,'top-left')\r\n\r\n\t\t\tgeocoder.on('result',(e)=>{\r\n\t\t\t\tconsole.log(e.result);\r\n\r\n\t\t\t\t// update lat & lng\r\n\t\t\t\tsetLng(e.result.center[0]);\r\n\t\t\t\tsetLat(e.result.center[1]);\r\n\r\n\t\t\t\t// remove the old marker\r\n\t\t\t\tmarker.remove();\r\n\t\t\t\t\r\n\t\t\t\t// re-add the new marker\r\n\t\t\t\tconst marker1 = new mapboxgl.Marker({\r\n\t\t\t\t\t\tdraggable: true\r\n\t\t\t\t})\r\n\t\t\t\t.setLngLat(e.result.center)\r\n\t\t\t\t.addTo(map);\t\r\n\r\n\t\t\t\tmarker1.on('drag',()=>{\r\n\t\t\t\t\t\tconst coordinates = marker1.getLngLat();\r\n\t\t\t\t\t\t// updating co-ordinates on dragging\r\n\t\t\t\t\t\tsetLat(coordinates.lat.toFixed(4));\r\n\t\t\t\t\t\tsetLng(coordinates.lng.toFixed(4));\r\n\t\t\t\t})\r\n\r\n\t\t\t})\r\n\r\n        // unmounting\r\n        return () => map.remove();\r\n\r\n    },[renderMap])\r\n\r\n\t\tconst handleSubmit = (e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\t\r\n\t\t\t// ******** post the data to backend **********\r\n\t\t\tconst formInfo = new FormData();\r\n\t\t\tformInfo.append('uid',user.uid);\r\n\t\t\tformInfo.append('email',user.email);\r\n\t\t\tformInfo.append('fullName',user.displayName);\r\n\t\t\tformInfo.append('latitude',lat);\r\n\t\t\tformInfo.append('longitude',lng);\r\n\r\n\t\t\tif(window.confirm(\"are you sure that this is your confirm hosting location?\")) {\r\n\t\t\t\t// **** posting to backend ****\r\n\t\t\t\thostingLocationApi.post('/hostinglocations', formInfo)\r\n\t\t\t\t.then(res=>{\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\talert(\"location successfully added\");\r\n\t\t\t\t\thistory.push(\"/profile\")\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err=>{\r\n\t\t\t\t\talert(err.message)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n    return (\r\n        <div className=\"map\">\r\n\t\t\t\t\t\t<div className=\"map__header\">\r\n\t\t\t\t\t\t\tmove marker to select your confirm location<br/>\r\n\t\t\t\t\t\t\tor<br/>\r\n\t\t\t\t\t\t\tsearch a place to confirm your location\r\n\t\t\t\t\t\t</div>\r\n            <div className=\"map__sidebar\">\r\n                Latitude: {lat} | Longitude: {lng} | Zoom: {zoom}\r\n            </div>\r\n            <div className=\"map__container\" ref={mapContainer}/>\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit} noValidate>\r\n\t\t\t\t\t\t\t<button className=\"map__button\" type=\"submit\">submit location</button>\r\n\t\t\t\t\t\t</form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","C:\\react\\arriendo\\src\\components\\HostingForm.js",[],"C:\\react\\arriendo\\src\\features\\positionSlice.js",[],"C:\\react\\arriendo\\src\\components\\Footer.js",[],"C:\\react\\arriendo\\src\\components\\Home.js",[],"C:\\react\\arriendo\\src\\components\\Card.js",[],"C:\\react\\arriendo\\src\\components\\HostingInfo.js",[],"C:\\react\\arriendo\\src\\components\\HostMain.js",[],"C:\\react\\arriendo\\src\\components\\HostingProfile.js",[],"C:\\react\\arriendo\\src\\api\\hostingLocationApi.js",[],"C:\\react\\arriendo\\src\\components\\ProfileMap.js",["134"],"import { Button } from '@material-ui/core';\r\nimport { CheckSharp, Lock, SupervisedUserCircle } from '@material-ui/icons';\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router'\r\nimport hostingLocationApi from '../api/hostingLocationApi';\r\nimport { selectUser } from '../features/userSlice';\r\nimport Footer from './Footer';\r\nimport HostingInfo from './HostingInfo';\r\nimport './ProfileMap.css'\r\nimport UpdateMap from './UpdateMap';\r\n\r\n\r\nfunction ProfileMap() {\r\n\r\n  // to keep track of url\r\n  const history = useHistory();\r\n\r\n  const[locationData, setLocationData] = useState(null);\r\n\r\n  // this will rerender compponent (i.e after update)\r\n  const[render, setRender] = useState(false);\r\n\r\n  const user = useSelector(selectUser);\r\n\r\n  useEffect(()=>{\r\n    // if location is not present in db then catch function will called & locationData will remain null\r\n    async function getLocation() {\r\n      hostingLocationApi.get(`/hostinglocations/${user.uid}`)\r\n      .then(resp=>{\r\n        console.log(resp.data);\r\n        setLocationData(resp.data);\r\n      })\r\n      .catch(err=>{\r\n        console.log(err);\r\n      })  \r\n    }\r\n    getLocation();\r\n  },[user.uid,render])\r\n\r\n  // delete location\r\n  const deleteLocation = () => {\r\n    if(window.confirm(`${user.displayName}, do you want to delete your location`)) {\r\n      hostingLocationApi.delete(`/hostinglocations/${user.uid}`)\r\n      .then(resp=>{\r\n        console.log(resp);\r\n        // without this component will not re-render\r\n        setLocationData(null);\r\n        alert(\"location deleted successfully\")\r\n      })\r\n      .catch(err=>{\r\n        console.log(err)\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"profilemap\">\r\n      {locationData?(\r\n        <>\r\n          <div className=\"profilemap__top\">\r\n            <div className=\"profilemap__topleft\">\r\n                <h1>Profile</h1>\r\n                <h4>{user.email}.</h4>\r\n            </div>\r\n            <Button onClick={deleteLocation}>\r\n                delete location\r\n            </Button>\r\n          </div>\r\n          <UpdateMap locationData={locationData}/>\r\n        </>\r\n      ):(\r\n        <>\r\n          <div className=\"not__register\">\r\n            \r\n            <div className=\"not__register__top\">\r\n              <h4>you have not added your location yet</h4>\r\n                                \r\n              <Button onClick={()=>history.push(\"/hosting/map\")}>\r\n                  add location\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"hosting__info\">\r\n              <HostingInfo\r\n                  Icon={SupervisedUserCircle} \r\n                  title=\"Trust & Safety\"\r\n                  info=\"Trust & safety tools help you accept a booking only if you’re 100% comfortable.\"\r\n              />\r\n              <HostingInfo\r\n                  Icon={CheckSharp} \r\n                  title=\"Host Guarantee\"\r\n                  info=\"Your peace of mind is priceless. So we don’t charge for it. Every eligible booking on Makent is covered by our Host Guarantee - at no additional cost to you.\"\r\n              />\r\n              <HostingInfo \r\n                  Icon={Lock} \r\n                  title=\"Secure payments\"\r\n                  info=\"Our fast, flexible payment system puts money in your bank account after guests check out.\"\r\n                  last=\"last\"\r\n              />\r\n            </div>\r\n                        \r\n          </div>\r\n          <Footer/>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileMap\r\n","C:\\react\\arriendo\\src\\components\\UpdateMap.js",["135","136"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport './UpdateMap.css'\r\n\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\r\nimport * as MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport hostingLocationApi from '../api/hostingLocationApi';\r\n\r\nmapboxgl.workerClass = MapboxWorker;\r\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2Fmd2FuLWJhcmRvbGlhIiwiYSI6ImNrb2IwaXI5MzAzYnkydm4xZWg4eDFkbmoifQ.2JbbEHLeVd5Y1BcuVHAyyQ';\r\n\r\nfunction UpdateMap({locationData}) {\r\n\r\n  const mapContainer = useRef();\r\n\r\n  // get the userinfo from userSlice\r\n  const user = useSelector(selectUser);\r\n\r\n  const [lat,setLat] = useState(locationData.latitude);\r\n  const [lng,setLng] = useState(locationData.longitude);\r\n  const [zoom, setZoom] = useState(15);\r\n\r\n  useEffect(()=>{\r\n    // initialize the map\r\n\t\tconst map = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      style: 'mapbox://styles/mapbox/streets-v11',\r\n      center: [lng, lat],\r\n      zoom: zoom\r\n    });\r\n\r\n    // add marker for default location\r\n    const marker = new mapboxgl.Marker({\r\n      draggable: true\r\n    })\r\n    .setLngLat([lng,lat])\r\n    .addTo(map);\r\n\r\n    // add draggable functionality\r\n    marker.on('drag',()=>{\r\n      const coordinates = marker.getLngLat();\r\n      // updating co-ordinates on dragging\r\n      setLat(coordinates.lat.toFixed(4));\r\n      setLng(coordinates.lng.toFixed(4));\r\n    })\r\n\r\n    // to search places in map (after search center will be resultant lat & lng )\r\n    const geocoder = new MapboxGeocoder({\r\n      accessToken: mapboxgl.accessToken,\r\n      mapboxgl: mapboxgl,\r\n      // not to display new marker\r\n      marker: false\r\n    });\r\n\r\n    map.addControl(geocoder,'top-left')\r\n\r\n    geocoder.on('result',(e)=>{\r\n      console.log(e.result);\r\n\r\n      // update lat & lng\r\n      setLng(e.result.center[0]);\r\n      setLat(e.result.center[1]);\r\n\r\n      // remove the old marker\r\n      marker.remove();\r\n      \r\n      // re-add the new marker\r\n      const marker1 = new mapboxgl.Marker({\r\n          draggable: true\r\n      })\r\n      .setLngLat(e.result.center)\r\n      .addTo(map);\t\r\n\r\n      marker1.on('drag',()=>{\r\n        const coordinates = marker1.getLngLat();\r\n        // updating co-ordinates on dragging\r\n        setLat(coordinates.lat.toFixed(4));\r\n        setLng(coordinates.lng.toFixed(4));\r\n      })\r\n\r\n    })\r\n\r\n    // unmounting\r\n    return () => map.remove();\r\n\r\n  },[])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // ******** update the data to backend **********\r\n    const formInfo = new FormData();\r\n    formInfo.append('uid',user.uid);\r\n    formInfo.append('email',user.email);\r\n    formInfo.append('fullName',user.displayName);\r\n    formInfo.append('latitude',lat);\r\n    formInfo.append('longitude',lng);\r\n\r\n    if(window.confirm(\"are you sure that you wants to update your hosting location?\")) {\r\n      // **** updating to backend ****\r\n      hostingLocationApi.put('/hostinglocations', formInfo)\r\n      .then(res=>{\r\n        console.log(res);\r\n        alert(\"location updated successfully\");\r\n      })\r\n      .catch(err=>{\r\n        alert(err.message)\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"updateMap\">\r\n      {/* <div className=\"updateMap__header\">\r\n        move marker to select your confirm location<br/>\r\n        or<br/>\r\n        search a place to confirm your location\r\n      </div> */}\r\n      <div className=\"updateMap__sidebar\">\r\n          Latitude: {lat} | Longitude: {lng} | Zoom: {zoom}\r\n      </div>\r\n      <div className=\"updateMap__container\" ref={mapContainer}/>\r\n      <form onSubmit={handleSubmit} noValidate>\r\n        <button className=\"updateMap__button\" type=\"submit\">update location</button>\r\n      </form>      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpdateMap\r\n","C:\\react\\arriendo\\src\\components\\NearbyLocation.js",["137","138","139","140"],"import { useEffect, useState} from 'react';\r\nimport './NearbyLocation.css';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport List from '@material-ui/icons/List';\r\n\r\nimport mapboxgl from 'mapbox-gl/dist/mapbox-gl-csp';\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport MapboxWorker from 'worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker';\r\nimport hostingApi from '../api/hostingApi';\r\nimport hostingLocationApi from '../api/hostingLocationApi';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectLat, selectLng } from '../features/positionSlice';\r\nimport { useHistory } from 'react-router';\r\n\r\nif (!('remove' in Element.prototype)) {\r\n  Element.prototype.remove = function() {\r\n    if (this.parentNode) {\r\n      this.parentNode.removeChild(this);\r\n    }\r\n  };\r\n}\r\n\r\nmapboxgl.workerClass = MapboxWorker;\r\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2Fmd2FuLWJhcmRvbGlhIiwiYSI6ImNrb2IwaXI5MzAzYnkydm4xZWg4eDFkbmoifQ.2JbbEHLeVd5Y1BcuVHAyyQ';\r\n\r\nfunction NearbyLocation() {\r\n\r\n  const history = useHistory();\r\n\r\n  const[hostingData,setHostingData] = useState([]);\r\n  const[locationData,setLocationData] = useState([]);\r\n\r\n  // get default value from slice\r\n  const [lat,setLat] = useState(useSelector(selectLat));\r\n  const [lng,setLng] = useState(useSelector(selectLng));\r\n  \r\n  // for smaller screen this will decide text of button and\r\n  // it will also decide what to show on screen (sidebar or map) by changing class name\r\n  const[maptext, setMaptext] = useState(true);\r\n  \r\n  // when data with same user is present in both table then we merged \"\"hosting data into location data\"\"?? because some user had only fill the hosting data\r\n  // we assign location data to following var\r\n  // we have not use state here. because when merging, following var mutate multiple time so inorder to avoid multiple re-rendering we have used simple var\r\n  let finalMergedData = [];\r\n\r\n  let geojson = {\r\n    type: \"FeatureCollection\",\r\n    features: [],\r\n  };\r\n  \r\n  const merging = () => {\r\n    // step 1\r\n    // merge location data into var\r\n    // because we perform mutation on independent-state variable\r\n    finalMergedData.push(...locationData);\r\n    // console.log(finalMergedData[0])\r\n\r\n    // step 2\r\n    // do the final merge, \r\n    if(finalMergedData.length!==0) {\r\n\r\n      hostingData.forEach((hosting)=>{\r\n        finalMergedData.forEach((location)=>{\r\n          if(hosting.uid===location.uid){\r\n            location.userProfileUrl=hosting.userProfileUrl;\r\n            location.fullName=hosting.fullName;\r\n            location.mobile=hosting.mobile;\r\n            location.description=hosting.description;\r\n            location.country=hosting.country;\r\n            location.state=hosting.state;\r\n            location.city=hosting.city;\r\n            location.address=hosting.address;\r\n            location.totalVehicles=hosting.totalVehicles;\r\n            location.fees=hosting.fees;\r\n            location.aadharFileUri=hosting.aadharFileUri;\r\n            location.residentialFileUri=hosting.residentialFileUri;\r\n            location.parkingPhotoUri=hosting.parkingPhotoUri;\r\n          }\r\n        })\r\n      })\r\n      \r\n    }\r\n\r\n    // console.log(finalMergedData[0])\r\n\r\n  }\r\n\r\n  const jsonToGeojson = () => {\r\n    for(let i=0;i<finalMergedData.length;i++) {\r\n      geojson.features.push({\r\n        \"type\":\"Feature\",\r\n        \"geometry\": {\r\n          \"type\": \"Point\",\r\n          \"coordinates\": [finalMergedData[i].longitude, finalMergedData[i].latitude]\r\n        },\r\n        \"properties\": {\r\n          \"uid\": finalMergedData[i].uid,\r\n          \"userProfileUrl\": finalMergedData[i].userProfileUrl,\r\n          \"totalVehicles\": finalMergedData[i].totalVehicles,\r\n          \"state\": finalMergedData[i].state,\r\n          \"residentialFileUri\": finalMergedData[i].residentialFileUri,\r\n          \"parkingPhotoUri\": finalMergedData[i].parkingPhotoUri,\r\n          \"mobile\": finalMergedData[i].mobile,\r\n          \"latitude\": finalMergedData[i].latitude,\r\n          \"longitude\": finalMergedData[i].longitude,\r\n          \"fullName\": finalMergedData[i].fullName,\r\n          \"fees\": finalMergedData[i].fees,\r\n          \"email\": finalMergedData[i].email,\r\n          \"description\": finalMergedData[i].description,\r\n          \"country\": finalMergedData[i].country,\r\n          \"city\": finalMergedData[i].city,\r\n          \"address\": finalMergedData[i].address,\r\n          \"aadharFileUri\": finalMergedData[i].aadharFileUri,\r\n        \r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const loadMap=()=> {\r\n    if (!('remove' in Element.prototype)) {\r\n      Element.prototype.remove = function () {\r\n        if (this.parentNode) {\r\n          this.parentNode.removeChild(this);\r\n        }\r\n      };\r\n    }\r\n    \r\n    var map = new mapboxgl.Map({\r\n      container: 'nearbyLocation__map',\r\n      style: 'mapbox://styles/mapbox/streets-v11',\r\n      center: [lng, lat],\r\n      zoom: 12,\r\n      scrollZoom: false\r\n    });\r\n\r\n    map.on('load', function (e) {\r\n      /**\r\n      * This is where your '.addLayer()' used to be, instead\r\n      * add only the source without styling a layer\r\n      */\r\n      map.addSource('places', {\r\n      'type': 'geojson',\r\n      'data': geojson\r\n      });\r\n       \r\n      /**\r\n      * Add all the things to the page:\r\n      * - The location listings on the side of the page\r\n      * - The markers onto the map\r\n      */\r\n      buildLocationList();\r\n      addMarkers();\r\n    });\r\n\r\n    function addMarkers() {\r\n      /* For each feature in the GeoJSON object above: */\r\n      geojson.features.forEach(function (marker) {\r\n        /* Create a div element for the marker. */\r\n        var el = document.createElement('div');\r\n        /* Assign a unique `id` to the marker. */\r\n        el.id = 'marker-' + marker.properties.uid;\r\n        /* Assign the `marker` class to each marker for styling. */\r\n        el.className = 'marker';\r\n        \r\n        /**\r\n        * Create a marker using the div element\r\n        * defined above and add it to the map.\r\n        **/\r\n        new mapboxgl.Marker(el, { offset: [0, -23] })\r\n        .setLngLat(marker.geometry.coordinates)\r\n        .addTo(map);\r\n        \r\n        /**\r\n        * Listen to the element and when it is clicked, do three things:\r\n        * 1. Fly to the point\r\n        * 2. Close all other popups and display popup for clicked store\r\n        * 3. Highlight listing in sidebar (and remove highlight for all other listings)\r\n        **/\r\n        el.addEventListener('click', function (e) {\r\n          /* Fly to the point */\r\n          flyToStore(marker);\r\n          /* Close all other popups and display popup for clicked store */\r\n          createPopUp(marker);\r\n          /* Highlight listing in sidebar */\r\n          var activeItem = document.getElementsByClassName('active');\r\n          e.stopPropagation();\r\n          if (activeItem[0]) {\r\n            activeItem[0].classList.remove('active');\r\n          }\r\n          var listing = document.getElementById(\r\n          'listing-' + marker.properties.uid\r\n          );\r\n          listing.classList.add('active');\r\n          // this.parentNode.classList.add('active');\r\n        });\r\n      });\r\n    }\r\n\r\n    /**\r\n* Add a listing for each store to the sidebar.\r\n**/\r\n    function buildLocationList() {\r\n      geojson.features.forEach(function (store, i) {\r\n        /**\r\n        * Create a shortcut for `store.properties`,\r\n        * which will be used several times below.\r\n        **/\r\n        var prop = store.properties;\r\n        \r\n        /* Add a new listing section to the sidebar. */\r\n        var listings = document.getElementById('listings');\r\n        var listing = listings.appendChild(document.createElement('div'));\r\n        /* Assign a unique `id` to the listing. */\r\n        listing.id = 'listing-' + prop.uid;\r\n        /* Assign the `item` class to each listing for styling. */\r\n        listing.className = 'item';\r\n                \r\n        // /* Add details to the individual listing. */\r\n        // var details = listing.appendChild(document.createElement('div'));\r\n        // details.innerHTML = prop.city;\r\n        // // if (prop.phone) {\r\n        // //   details.innerHTML += ' &middot; ' + prop.phoneFormatted;\r\n        // // }\r\n\r\n        // add img inside listing\r\n        var img = listing.appendChild(document.createElement('img'));\r\n        img.src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ_wbPYTxQPMcBh7SPzLFActXnP3uhifeVT_g&usqp=CAU\";\r\n \r\n        /* Add the link to the individual listing created above. */\r\n        // var link = listing.appendChild(document.createElement('a'));\r\n        // link.href = '#';\r\n        // link.className = 'title';\r\n        // link.id = 'link-' + prop.uid;\r\n        // link.innerHTML = prop.address;\r\n        \r\n        \r\n        var listing__info = listing.appendChild(document.createElement('div'));\r\n        listing__info.className = 'listing__info';\r\n\r\n        // # listing__info start\r\n        \r\n        var listing__infoTop = listing__info.appendChild(document.createElement('div'));\r\n        listing__infoTop.className = 'listing__infoTop'\r\n\r\n          // * listing__infoTop start\r\n            var location = listing__infoTop.appendChild(document.createElement('p'))\r\n            location.innerHTML = `${prop.country} | ${prop.state} | ${prop.city}`\r\n\r\n            // var title = listing__infoTop.appendChild(document.createElement('h3'))\r\n            // title.innerHTML = prop.address\r\n\r\n            /* Add the link to the individual listing created above. */\r\n            var link = listing__infoTop.appendChild(document.createElement('h4'));\r\n            // link.href = '';\r\n            link.className = 'title';\r\n            link.id = 'link-' + prop.uid;\r\n            link.innerHTML = prop.address;\r\n\r\n            var underscope = listing__infoTop.appendChild(document.createElement('p'))\r\n            underscope.innerHTML = '_____'\r\n            \r\n            var description = listing__infoTop.appendChild(document.createElement('p'))\r\n            description.innerHTML = `${prop.description} . ${prop.totalVehicles} space for vehicle . User ${prop.fullName} . Mobile ${prop.mobile}`\r\n          // * listing__infoTop end\r\n\r\n          \r\n          var listing__infoBottom = listing__info.appendChild(document.createElement('div'));\r\n          listing__infoBottom.className = 'listing__infoBottom'\r\n\r\n          // ** listing__infoBottom start\r\n            var stars = listing__infoBottom.appendChild(document.createElement('div'));\r\n            stars.className = 'listing_stars'\r\n\r\n              var stars_p = stars.appendChild(document.createElement('p'))\r\n              stars_p.innerHTML = '4.3'\r\n\r\n            var price = listing__infoBottom.appendChild(document.createElement('div'));\r\n            stars.className = 'listing_price'\r\n\r\n              var price_h2 = price.appendChild(document.createElement('h2'))\r\n              price_h2.innerHTML = `₹${prop.fees} / hour`\r\n          // ** listing__infoBottom end\r\n\r\n        // # listing__info end\r\n\r\n        /**\r\n        * Listen to the element and when it is clicked, do four things:\r\n        * 1. Update the `currentFeature` to the store associated with the clicked link\r\n        * 2. Fly to the point\r\n        * 3. Close all other popups and display popup for clicked store\r\n        * 4. Highlight listing in suidebar (and remove highlight for all other listings)\r\n        **/\r\n\r\n        // link.addEventListener('click', function (e) {\r\n        //   for (var i = 0; i < geojson.features.length; i++) {\r\n        //     if (this.id === 'link-' + geojson.features[i].properties.uid) {\r\n        //       var clickedListing = geojson.features[i];\r\n        //       flyToStore(clickedListing);\r\n        //       createPopUp(clickedListing);\r\n        //     }\r\n        //   }\r\n        //   var activeItem = document.getElementsByClassName('active');\r\n        //   if (activeItem[0]) {\r\n        //     activeItem[0].classList.remove('active');\r\n        //   }\r\n        //   this.parentNode.parentNode.parentNode.classList.add('active');\r\n        // });\r\n\r\n        listing.addEventListener('mouseover', function (e) {\r\n          for (var i = 0; i < geojson.features.length; i++) {\r\n            if (this.id === 'listing-' + geojson.features[i].properties.uid) {\r\n              var clickedListing = geojson.features[i];\r\n              flyToStore(clickedListing);\r\n              createPopUp(clickedListing);\r\n            }\r\n          }\r\n          var activeItem = document.getElementsByClassName('active');\r\n          if (activeItem[0]) {\r\n            activeItem[0].classList.remove('active');\r\n          }\r\n          this.classList.add('active');\r\n        });\r\n\r\n        // move to booking when user click on sidebar-listing-record\r\n        listing.addEventListener('click',function(e){\r\n          for (var i = 0; i < geojson.features.length; i++) {\r\n            if (this.id === 'listing-' + geojson.features[i].properties.uid) {\r\n              var clickedListing = geojson.features[i];\r\n              history.push({\r\n                pathname: '/booking',\r\n                hostingInfo: clickedListing\r\n              })\r\n            }\r\n          }\r\n        })\r\n\r\n\r\n      });\r\n    }\r\n\r\n    function flyToStore(currentFeature) {\r\n      map.flyTo({\r\n      center: currentFeature.geometry.coordinates,\r\n      zoom: 15\r\n      });\r\n    }\r\n\r\n    function createPopUp(currentFeature) {\r\n      var popUps = document.getElementsByClassName('mapboxgl-popup');\r\n      if (popUps[0]) popUps[0].remove();\r\n      // var popup = new mapboxgl.Popup({ closeOnClick: false })\r\n      var popup = new mapboxgl.Popup()\r\n      .setLngLat(currentFeature.geometry.coordinates)\r\n      .setHTML(\r\n      // '<h3>Parking</h3>' +\r\n      // '<h4>' +\r\n      // currentFeature.properties.address +\r\n      // '</h4>'\r\n      `<div id='mapcard' class='mapcard'>\r\n        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ_wbPYTxQPMcBh7SPzLFActXnP3uhifeVT_g&usqp=CAU'/>\r\n        <div class='mapcard__info'>\r\n          <h3>${currentFeature.properties.address}, ${currentFeature.properties.city} <br> </>\r\n          <h3>${currentFeature.properties.description} <br> ${currentFeature.properties.totalVehicles} space for vehicle - ${currentFeature.properties.mobile} <br> </>\r\n          <h2>₹${currentFeature.properties.fees} / hour</>\r\n        </div>\r\n      </div>`\r\n      )\r\n      .addTo(map);\r\n\r\n      // move to booking when user click on mapcard\r\n      var mapcard = document.getElementById(\"mapcard\");\r\n      mapcard.addEventListener('click',()=>{\r\n        history.push({\r\n          pathname: '/booking',\r\n          hostingInfo: currentFeature\r\n        })\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n\r\n    const getData = async() => {\r\n      try {\r\n        const res = await hostingApi.get(`/hostings`);\r\n        setHostingData(res.data);\r\n      } catch(err) {\r\n        console.log(err)\r\n      }\r\n\r\n      try {\r\n        const res = await hostingLocationApi.get(`/hostinglocations`);\r\n        setLocationData(res.data);  \r\n      } catch(err) {\r\n        console.log(err)\r\n      }\r\n\r\n    } \r\n    \r\n    // means when locationData fetching is complete\r\n    if(locationData.length!==0) {\r\n      merging();\r\n      jsonToGeojson();\r\n    }  \r\n\r\n    // console.log(geojson)\r\n    \r\n    if(geojson.length!==0) {\r\n      loadMap();\r\n    }\r\n\r\n    // calling async function\r\n    getData();   \r\n\r\n  },[locationData.length])\r\n\r\n  // for smaller screen, this will decide whether to display sidebar or map\r\n  const hideAndShowMapAndSidebar = () => {\r\n    if(maptext) {\r\n      // we are going to display list\r\n\r\n      // hide map\r\n      // remove 'show' class from map & add 'hide'\r\n      document.getElementById(\"nearbyLocation__map\").classList.remove('show')\r\n      document.getElementById(\"nearbyLocation__map\").classList.add('hide')\r\n\r\n      // show sidebar\r\n      // remove 'hide' class from sidebar & add 'show'\r\n      document.getElementById(\"nearbyLocation__sidebar\").classList.remove('hide')\r\n      document.getElementById(\"nearbyLocation__sidebar\").classList.add('show')      \r\n\r\n    } else {\r\n      // we are going to display map\r\n\r\n      // hide sidebar\r\n      // remove 'show' class from nearbyLocation__sidebar & add 'hide'\r\n      document.getElementById(\"nearbyLocation__sidebar\").classList.remove('show')\r\n      document.getElementById(\"nearbyLocation__sidebar\").classList.add('hide')\r\n\r\n      // show map\r\n      // remove 'hide' class from map & add 'show'\r\n      document.getElementById(\"nearbyLocation__map\").classList.remove('hide')\r\n      document.getElementById(\"nearbyLocation__map\").classList.add('show')\r\n\r\n    }\r\n    setMaptext(!maptext);\r\n  }\r\n\r\n  return (\r\n    <div className=\"nearbyLocation\">\r\n\r\n        {/* remember we only target 'hide' & 'show' class for screen < 1100px   */}\r\n      <div id=\"nearbyLocation__sidebar\" className=\"nearbyLocation__sidebar hide\">\r\n        <div className=\"nearbyLocation__heading\">\r\n          <h1>nearby parking location</h1>\r\n        </div>\r\n        <div id=\"listings\" className=\"listings\">\r\n\r\n        </div>\r\n      </div>\r\n      \r\n      <div id=\"nearbyLocation__map\" className=\"nearbyLocation__map show\">\r\n\r\n      </div>\r\n\r\n      <div className=\"nearbyLocation__button\" onClick={hideAndShowMapAndSidebar}>\r\n        <h4>{maptext?'list':'map'}</h4>\r\n        {maptext?<List/>:<MapIcon/>}\r\n      </div>\r\n      {/* <Button onClick={hideAndShowMapAndSidebar}>{maptext?'list':'map'}</Button> */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NearbyLocation;\r\n","C:\\react\\arriendo\\src\\components\\Booking.js",[],"C:\\react\\arriendo\\src\\components\\ConfirmBooking.js",["141"],"import React from 'react'\r\nimport { Call,LocalParking,Star } from '@material-ui/icons';\r\nimport { useHistory, useLocation } from 'react-router'\r\nimport './ConfirmBooking.css'\r\nimport { Avatar, Button } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport { selectUser } from '../features/userSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport myBookingApi from '../api/myBookingApi'\r\nimport myHostingClientApi from '../api/myHostingClientApi'\r\nimport { useEffect } from 'react';\r\n\r\nfunction ConfirmBooking() {\r\n\r\n  const history = useHistory();\r\n\r\n\t// get the userInfo from userSlice\r\n\tconst user = useSelector(selectUser);\r\n\r\n  // for accessing Passed parameters with history push:\r\n  const location = useLocation();\r\n  console.log(location);\r\n\r\n  // create shortcut\r\n  const hostingInfo = location?.hostingInfo;\r\n  const hostingInfoCoordinates = location?.hostingInfoCoordinates;\r\n  const parkingDuration = location?.parkingDuration;\r\n\r\n\t// at the start of this component check if the user has already reserve parking??\r\n\tuseEffect(()=>{\r\n\r\n\t\tasync function check() {\r\n\t\t\t// means booking is still present for current user\r\n\t\t\tmyBookingApi.get(`/mybookings/${user.uid}`)\r\n\t\t\t.then(resp=>{\r\n\t\t\t\tconsole.log(resp);\r\n\t\t\t\talert(\"you already have one booking request in pending, first complete it\")\r\n\t\t\t\thistory.push(\"/myBooking\")\r\n\t\t\t})\r\n\t\t\t.catch(err=>{\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tcheck();\r\n\r\n\t},[history,user.uid])\r\n\r\n  const [formData, setFormData] = useState({\r\n    fullName:\"\",\r\n    mobile:\"\",\r\n    carType:\"\",\r\n    carNumber:\"\",\r\n    licenseNumber:\"\",\r\n    licensePhoto:\"\",\r\n\t\trcPhoto:\"\",\r\n    formErrors:{\r\n      fullName:\"\",\r\n      mobile:\"\",\r\n      carType:\"\",\r\n      carNumber:\"\",\r\n      licenseNumber:\"\",\r\n      licensePhoto:\"\",\r\n\t\t\trcPhoto:\"\",\r\n    }\r\n  })\r\n\r\n\t// we have used ... because we want to use object.values() on remaining 4 field of state\r\n\tconst formValid = ({formErrors, ...restProperty}) => {\r\n\t\tlet valid = true;\r\n\r\n\t\t// Object.values creates an array that contains the values of every property in an object.\r\n\t\tObject.values(formErrors) \r\n\t\t.forEach(val=> {\r\n\t\t\t// val.length>0 : means any error string is present\r\n\t\t\tval.length > 0 && (valid=false);                // shorted syntax for if(val.length>0) then (valid=false)\r\n\t\t})\r\n\r\n\t\t// another solution for loop throgh an object\r\n\t\t// Object.entries creates an array of arrays. Each inner array has two item. The first item is the property; the second item is the value.\r\n\t\tconst entries = Object.entries(restProperty);\r\n\r\n\t\t// loop through\r\n\t\tfor(const [key, value] of entries) {\r\n\t\t\t\t\r\n\t\t\tif(value===\"\") {\r\n\t\t\t\t\tvalid = false;\r\n\r\n\t\t\t\t\t// veri imp, setting an error msg when we direct submit form\r\n\t\t\t\t\tformErrors[key] = `${key} cannot be empty`;\r\n\t\t\t\t\tconsole.log(formErrors);\r\n\t\t\t\t\tconsole.log(key);\r\n\t\t\t\t\tconsole.log(formErrors.key);\r\n\t\t\t\t\tconsole.log(formData.formErrors);\r\n\t\t\t}\r\n\r\n\t\t\t// for files\r\n\t\t\tif(value===null) {\r\n\t\t\t\t\tvalid = false;\r\n\t\t\t\t\tformErrors[key] = `please add ${key}`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Updating a specific record will require making a recall to the previous State prevState\r\n\t\tsetFormData((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\tformErrors: formErrors\r\n\t\t}))\r\n\r\n\t\tconsole.log(formData.formErrors);\r\n\r\n\t\treturn valid;\r\n  }  \r\n\r\n\t// when form is submitted\r\n\tconst handleSubmit = async(e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\t// call formValid()\r\n\t\tif(formValid(formData)) {\r\n      \r\n\t\t\tconsole.log(`\r\n\t\t\t--SUBMITTING--\r\n\t\t\tuid: ${user.uid}\r\n\t\t\temail: ${user.email}\r\n\t\t\tuserProfileUrl: ${user.photo}\r\n\t\t\tdate: ${parkingDuration.date}\r\n\t\t\tcheckInTime: ${parkingDuration['check-in-time']}\r\n\t\t\tcheckOutTime: ${parkingDuration['check-out-time']}\r\n\t\t\tFull NAME: ${formData.fullName}\r\n\t\t\tMobile: ${formData.mobile}\r\n\t\t\tcarType: ${formData.carType}\r\n\t\t\tcarNumber: ${formData.carNumber}\r\n\t\t\tlicenseNumber: ${formData.licenseNumber}\r\n\t\t\tlicensePhoto: ${formData.licensePhoto}\r\n\t\t\trcPhoto: ${formData.rcPhoto}\r\n\t\t\thostUID: ${hostingInfo.uid}\r\n\t\t\t`)\r\n\r\n\t\t\t// ******** post the data to backend **********\r\n\r\n\t\t\t// for MyBooking api\r\n\t\t\tconst formInfo = new FormData();\r\n\r\n\t\t\tformInfo.append('c_uid', user.uid);\r\n\t\t\tformInfo.append('email', user.email)\r\n\t\t\tformInfo.append('userProfileUrl',user.photo);\r\n\r\n\t\t\tformInfo.append('date',parkingDuration.date);\r\n\t\t\tformInfo.append('checkInTime',parkingDuration['check-in-time']);\r\n\t\t\tformInfo.append('checkOutTime',parkingDuration['check-out-time']);\r\n\r\n\t\t\tformInfo.append('fullName',formData.fullName);\r\n\t\t\tformInfo.append('mobile',formData.mobile);\r\n\t\t\tformInfo.append('carType',formData.carType);\r\n\t\t\tformInfo.append('carNumber',formData.carNumber);\r\n\t\t\tformInfo.append('licenseNumber',formData.licenseNumber);\r\n\t\t\tformInfo.append('licensePhoto',formData.licensePhoto);\r\n\t\t\tformInfo.append('rcPhoto',formData.rcPhoto);\r\n\r\n\t\t\tformInfo.append('host_uid',hostingInfo.uid);\r\n\r\n\t\t\t// for MyHostingClient api (which is for host)\r\n\t\t\tconst formInfo1 = new FormData();\r\n\r\n\t\t\tformInfo1.append('uid',hostingInfo.uid+user.uid);\r\n\t\t\tformInfo1.append('driver_uid',user.uid);\r\n\r\n\r\n\t\t\t// *****************post to backend*******************\r\n\t\t\ttry {\r\n\t\t\t\t// post to my__booking\r\n\t\t\t\tconst myBookingResponce = await myBookingApi.post(\"/mybookings\",formInfo);\r\n\t\t\t\tconsole.log(myBookingResponce);\r\n\r\n\t\t\t\t// post to my__hosting__client (which is for host)\r\n\t\t\t\tconst MyHostingClientResponce = await myHostingClientApi.post(\"/myhostingclients\",formInfo1);\r\n\t\t\t\tconsole.log(MyHostingClientResponce);\r\n\r\n\t\t\t\talert(\"data added successfully\");\r\n\t\t\t\thistory.push(\"/myBooking\")\r\n\t\t\t} catch(err) {\r\n\t\t\t\talert(err);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t\tconsole.error('FORM INVALID - DISPLAY ERROR MESSAGE');\r\n\t\t}\r\n  }\r\n\r\n\t// on change of any input field\r\n\tconst handleChange = e => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\t// get the name of the input field which is change (e.g<input name=\"fullName\">)\r\n\t\t// get the value also\r\n\t\tvar {name, value} = e.target;\r\n\r\n\t\t// initialize state's formErrors in local variable(so we dont have to use \"this.state.formErrors\" each time )\r\n\t\tlet formErrors = formData.formErrors;\r\n\r\n\t\tswitch(name) {\r\n\t\t\tcase 'fullName':\r\n\t\t\t\tformErrors.fullName = value.length < 6 ? \"minimum 6 characters required, Full Name\" : \"\";\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase 'mobile':\r\n\t\t\t\tformErrors.mobile = value.length !==10 ? \"phone number must be of 10 digit, mobile\" : \"\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'carType':\r\n\t\t\t\tformErrors.carType = value.length < 6 ? \"minimum 6 characters required, carType\" : \"\";\r\n\t\t\t\tbreak;      \r\n\r\n\t\t\tcase 'carNumber':\r\n\t\t\t\tformErrors.carNumber = value.length < 8 ? \"not a valid carNumber\" : \"\";\r\n\t\t\t\tbreak;      \r\n\r\n\t\t\tcase 'licenseNumber':\r\n\t\t\t\tformErrors.licenseNumber = value.length !==15 ? \"not a valid licenseNumber\" : \"\";\r\n\t\t\t\tbreak;      \r\n\t\r\n\t\t\tcase 'licensePhoto':\r\n\t\t\t\tformErrors.licensePhoto = e.target.files.length===0 ? `please add ${name}` : \"\";\r\n\t\t\t\tif(e.target.files.length!==0) {\r\n\t\t\t\t\tvalue = e.target.files[0];\r\n\t\t\t\t}  \r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'rcPhoto':\r\n\t\t\t\tformErrors.rcPhoto = e.target.files.length===0 ? `please add ${name}` : \"\";\r\n\t\t\t\tif(e.target.files.length!==0) {\r\n\t\t\t\t\tvalue = e.target.files[0];\r\n\t\t\t\t}  \r\n\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;  \r\n\t\t}\r\n\r\n\t\t// update the state each time, i think formErrors is ES6 code i.e (formErrors:formErrors)\r\n\t\tsetFormData((prevState)=>({\r\n\t\t\t\t...prevState,\r\n\t\t\t\tformErrors: formErrors,\r\n\t\t\t\t[name]: value               // here the actual change takes place\r\n\t\t}))\r\n\r\n\t\tconsole.log(formData);\r\n\t}\r\n\t\r\n\tconst {formErrors} = formData;\r\n\r\n  return (\r\n    <div className=\"confirmBooking\">\r\n      {location.hostingInfo?(\r\n        <>\r\n          <div className=\"booking__header\">\r\n            <h1>{hostingInfo.address}</h1>\r\n            <div className=\"booking__header__info\">\r\n              <div className=\"booking__header__info__left\">\r\n                <div className=\"booking__header__info__rating\">\r\n                  <Star/>\r\n                  4.3\r\n                </div>\r\n                <h4>{`${hostingInfo.city},${hostingInfo.state},${hostingInfo.country}`}</h4>\r\n              </div>\r\n              <div className=\"booking__header__info__right\">\r\n                {/* <HearingTwoTone/>\r\n                <List/> */}\r\n                <Call/>\r\n                {hostingInfo.mobile}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\t\t\t\t\t<div className=\"confirmBooking__time\">\r\n\t\t\t\t\t\t<div className=\"confirmBooking__time__left\">\r\n\t\t\t\t\t\t\t<h2>Confirm your trip</h2>\r\n\t\t\t\t\t\t\t<div className=\"confirmBooking__time__left__field\">\r\n\t\t\t\t\t\t\t\t\t<h4>Date</h4>\r\n\t\t\t\t\t\t\t\t\t<h5>{parkingDuration.date}</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"confirmBooking__time__left__field\">\r\n\t\t\t\t\t\t\t\t\t<h4>CHECK-IN-TIME</h4>\r\n\t\t\t\t\t\t\t\t\t<h5>{parkingDuration['check-in-time']}</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"confirmBooking__time__left__field\">\r\n\t\t\t\t\t\t\t\t\t<h4>CHECK-OUT-TIME</h4>\r\n\t\t\t\t\t\t\t\t\t<h5>{parkingDuration['check-out-time']}</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"confirmBooking__time__right\">\r\n\t\t\t\t\t\t\t<img alt=\"\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ_wbPYTxQPMcBh7SPzLFActXnP3uhifeVT_g&usqp=CAU\"/>\r\n\t\t\t\t\t\t\t<p>{hostingInfo.description}</p>\r\n\t\t\t\t\t\t\t<div className=\"confirmBooking__time__right__info\">\r\n\t\t\t\t\t\t\t\t<h2>Price details</h2>\r\n\t\t\t\t\t\t\t\t<h5>{`₹${hostingInfo.fees} / hour`}</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>      \r\n\t\t\t\t\t</div>\r\n\r\n          <div className=\"booking__hosting\">\r\n            <div className=\"booking__hosting__left\">\r\n              <h4>{`Parking at home hosted by ${hostingInfo.fullName}`}</h4>\r\n              <Avatar src={hostingInfo.userProfileUrl}/>\r\n            </div>\r\n            <h5><LocalParking/>{`Total space available for parking ${hostingInfo.totalVehicles}`}</h5>\r\n          </div>\r\n\r\n          <div className=\"hostingForm\">\r\n            \r\n            <div className=\"hostingForm__body\">\r\n                \r\n              <h1>Driver Profile</h1>\r\n              \r\n              {/*noValidate: it specifies that the form-data (input) should not be validated when submitted. */}\r\n              {/* If we enable HTML5 validations, we have little control of the look and feel of error messages */}\r\n              <form onSubmit={handleSubmit} noValidate>\r\n\r\n                <div className=\"firstName\">\r\n\t\t\t\t\t\t\t\t\t{/* means label for name=\"firstName\" is 'First Name' */}\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"firstName\">Full Name</label>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t// for displaying box as red when error present in current field\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={formErrors.fullName.length > 0 ? \"error\":null}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Full Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"fullName\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={formData.fullName}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{/* displaying error msg */}\r\n\t\t\t\t\t\t\t\t\t{ formErrors.fullName.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"errorMessage\">{formErrors.fullName}</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n                </div>\r\n\r\n                <div className=\"mobile\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"mobile\">Mobile no</label>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={formErrors.mobile.length > 0 ? \"error\":null}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"1234567890\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"mobile\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={formData.mobile}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{/* displaying error msg */}\r\n\t\t\t\t\t\t\t\t\t{ formErrors.mobile.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"errorMessage\">{formErrors.mobile}</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n                </div>\r\n\r\n                <div className=\"description\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"carType\">carType</label>\r\n\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={formErrors.carType.length > 0 ? \"error\":null}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"SUV, BMW, Honda-city\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"carType\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={formData.carType}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{/* displaying error msg */}\r\n\t\t\t\t\t\t\t\t\t{ formErrors.carType.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"errorMessage\">{formErrors.carType}</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n                </div>\r\n                \r\n                <div className=\"city\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"carNumber\">carNumber</label>\r\n\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={formErrors.carNumber.length > 0 ? \"error\":null}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"MH39-4589\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"carNumber\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={formData.carNumber}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{/* displaying error msg */}\r\n\t\t\t\t\t\t\t\t\t{ formErrors.carNumber.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"errorMessage\">{formErrors.carNumber}</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n                </div>\r\n\r\n                <div className=\"address\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"licenseNumber\">licenseNumber</label>\r\n\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={formErrors.licenseNumber.length > 0 ? \"error\":null}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"MH9901234567890\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"licenseNumber\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={formData.licenseNumber}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{/* displaying error msg */}\r\n\t\t\t\t\t\t\t\t\t{ formErrors.licenseNumber.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"errorMessage\">{formErrors.licenseNumber}</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n                </div>\r\n\r\n                <div className=\"parkingPhoto\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"licensePhoto\">Add image of your driving license</label>\r\n\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={formErrors.licensePhoto.length > 0 ? \"error\":null}\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"licensePhoto\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{/* displaying error msg */}\r\n\t\t\t\t\t\t\t\t\t{ formErrors.licensePhoto.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"errorMessage\">{formErrors.licensePhoto}</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n                </div>\r\n\r\n                <div className=\"state\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"rcPhoto\">Add image of your RC-book</label>\r\n\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={formErrors.rcPhoto.length > 0 ? \"error\":null}\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"rcPhoto\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{/* displaying error msg */}\r\n\t\t\t\t\t\t\t\t\t{ formErrors.rcPhoto.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"errorMessage\">{formErrors.rcPhoto}</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n                </div>\r\n\r\n                <div className=\"createAccount\">\r\n                    <button type=\"submit\">Reserve Parking</button>\r\n                </div>\r\n\r\n              </form>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </>\r\n      ):(\r\n        // when user direct backdoor to the url\r\n        <>\r\n          <div className=\"booking__backdoor\">\r\n            <h4>first select parking location</h4>\r\n            <Button onClick={()=>history.push('/nearbyLocation')}>search nearby</Button>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConfirmBooking\r\n","C:\\react\\arriendo\\src\\api\\myBookingApi.js",[],"C:\\react\\arriendo\\src\\components\\MyBooking.js",["142","143","144"],"import { Button } from '@material-ui/core';\r\nimport { CheckSharp, Error, Lock, SupervisedUserCircle } from '@material-ui/icons';\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router'\r\nimport hostingApi from '../api/hostingApi';\r\nimport hostingLocationApi from '../api/hostingLocationApi';\r\nimport myBookingApi from '../api/myBookingApi';\r\nimport myHostingClientApi from '../api/myHostingClientApi';\r\nimport { selectUser } from '../features/userSlice';\r\nimport Footer from './Footer';\r\nimport HostingInfo from './HostingInfo';\r\nimport './MyBooking.css'\r\n\r\nfunction MyBooking() {\r\n\r\n  // to keep track of url\r\n  const history = useHistory();\r\n\r\n  const user = useSelector(selectUser);\r\n\r\n  // because we fetch data from multiple api using f_key\r\n  const[myBookingData, setMyBookingData] = useState({\r\n    booking:null,\r\n    hosting:null,\r\n    location:null\r\n  });\r\n\r\n  console.log(myBookingData)\r\n\r\n  useEffect(()=>{\r\n\r\n    async function check() {\r\n      try {\r\n        // fetch the booking record of current user\r\n        const bookingResp = await myBookingApi.get(`/mybookings/${user.uid}`);\r\n\r\n        // then fetch hosting info of that booking\r\n        const hostResp = await hostingApi.get(`/hostings/${bookingResp.data.host_uid}`);\r\n        \r\n        // then fetch hostingLocation info of that booking\r\n        const locResp = await hostingLocationApi.get(`/hostinglocations/${bookingResp.data.host_uid}`);\r\n  \r\n        setMyBookingData({\r\n          ...myBookingData,\r\n          booking: bookingResp.data,\r\n          hosting:hostResp.data,\r\n          location:locResp.data\r\n        })\r\n\r\n      } catch(err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n    check();\r\n\r\n  },[user.uid])\r\n\r\n  // cancel Booking\r\n  const cancelBooking = async() => {\r\n    if(window.confirm(`${myBookingData.booking.fullName} are you sure, you want to cancel your booking?`)) {\r\n      try {\r\n        // delete my_booking record\r\n        const resp = await myBookingApi.delete(`/mybookings/${user.uid}`);\r\n\r\n        // delete my_hosting_client record (so host doesnt see this req anymore)\r\n        const myHostingClient_pk = myBookingData.booking.host_uid+user.uid;\r\n        const resp1 = await myHostingClientApi.delete(`/myhostingclients/${myHostingClient_pk}`)\r\n\r\n        // without this component will not re-render  \r\n        setMyBookingData({\r\n          booking:null,\r\n          hosting:null,\r\n          location:null\r\n        })\r\n\r\n        alert(\"your parking request cancel successfully\")\r\n\r\n      } catch(err) {\r\n        alert(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"myBooking\">\r\n      {myBookingData.booking?(\r\n        <>\r\n          {/* check if host has acknowledge his parking space */}\r\n          {myBookingData.booking.confirmation===true?(\r\n            <>\r\n              ****host has acknowledge you\r\n            </>\r\n          ):(\r\n            // host has not acknowledge your req yet\r\n            <>\r\n              <div className=\"myBooking__notConfirm\">\r\n                <div className=\"myBooking__notConfirm__left\">\r\n                  <h1>booking request is send</h1>\r\n                  <h4><Error/> Host has not acknowledge your request yet</h4>\r\n                </div>\r\n                <Button onClick={cancelBooking}>\r\n                  cancel booking\r\n                </Button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </>\r\n      ):(\r\n        <>\r\n          <div className=\"not__register\">\r\n            \r\n            <div className=\"not__register__top\">\r\n              <h4>you dont have any booking yet</h4>\r\n                                \r\n              <Button onClick={()=>history.push(\"/nearbyLocation\")}>\r\n                nearbyLocation\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"hosting__info\">\r\n              <HostingInfo\r\n                  Icon={SupervisedUserCircle} \r\n                  title=\"Trust & Safety\"\r\n                  info=\"Trust & safety tools help you accept a booking only if you’re 100% comfortable.\"\r\n              />\r\n              <HostingInfo\r\n                  Icon={CheckSharp} \r\n                  title=\"Host Guarantee\"\r\n                  info=\"Your peace of mind is priceless. So we don’t charge for it. Every eligible booking on Makent is covered by our Host Guarantee - at no additional cost to you.\"\r\n              />\r\n              <HostingInfo \r\n                  Icon={Lock} \r\n                  title=\"Secure payments\"\r\n                  info=\"Our fast, flexible payment system puts money in your bank account after guests check out.\"\r\n                  last=\"last\"\r\n              />\r\n            </div>\r\n                        \r\n          </div>\r\n          <Footer/>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyBooking\r\n","C:\\react\\arriendo\\src\\api\\myHostingClientApi.js",[],"C:\\react\\arriendo\\src\\components\\MyHostingClient.js",["145","146","147","148"],"C:\\react\\arriendo\\src\\components\\MyHostingClientResult.js",["149"],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":36,"column":18,"nodeType":"156","messageId":"157","endLine":36,"endColumn":25},{"ruleId":"154","severity":1,"message":"158","line":39,"column":23,"nodeType":"156","messageId":"157","endLine":39,"endColumn":35},{"ruleId":"159","severity":1,"message":"160","line":155,"column":7,"nodeType":"161","endLine":155,"endColumn":18,"suggestions":"162"},{"ruleId":"154","severity":1,"message":"163","line":24,"column":17,"nodeType":"156","messageId":"157","endLine":24,"endColumn":26},{"ruleId":"154","severity":1,"message":"155","line":24,"column":16,"nodeType":"156","messageId":"157","endLine":24,"endColumn":23},{"ruleId":"159","severity":1,"message":"164","line":89,"column":5,"nodeType":"161","endLine":89,"endColumn":7,"suggestions":"165"},{"ruleId":"154","severity":1,"message":"166","line":34,"column":14,"nodeType":"156","messageId":"157","endLine":34,"endColumn":20},{"ruleId":"154","severity":1,"message":"167","line":35,"column":14,"nodeType":"156","messageId":"157","endLine":35,"endColumn":20},{"ruleId":"154","severity":1,"message":"168","line":353,"column":11,"nodeType":"156","messageId":"157","endLine":353,"endColumn":16},{"ruleId":"159","severity":1,"message":"169","line":417,"column":5,"nodeType":"161","endLine":417,"endColumn":26,"suggestions":"170"},{"ruleId":"154","severity":1,"message":"171","line":26,"column":9,"nodeType":"156","messageId":"157","endLine":26,"endColumn":31},{"ruleId":"159","severity":1,"message":"172","line":60,"column":5,"nodeType":"161","endLine":60,"endColumn":15,"suggestions":"173"},{"ruleId":"154","severity":1,"message":"174","line":67,"column":15,"nodeType":"156","messageId":"157","endLine":67,"endColumn":19},{"ruleId":"154","severity":1,"message":"175","line":71,"column":15,"nodeType":"156","messageId":"157","endLine":71,"endColumn":20},{"ruleId":"154","severity":1,"message":"176","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":16},{"ruleId":"154","severity":1,"message":"177","line":18,"column":9,"nodeType":"156","messageId":"157","endLine":18,"endColumn":16},{"ruleId":"154","severity":1,"message":"178","line":23,"column":9,"nodeType":"156","messageId":"157","endLine":23,"endColumn":19},{"ruleId":"159","severity":1,"message":"179","line":40,"column":5,"nodeType":"161","endLine":40,"endColumn":7,"suggestions":"180"},{"ruleId":"159","severity":1,"message":"181","line":22,"column":5,"nodeType":"161","endLine":22,"endColumn":7,"suggestions":"182"},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'setZoom' is assigned a value but never used.","Identifier","unusedVar","'setRenderMap' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'lat', 'lng', 'user.uid', and 'zoom'. Either include them or remove the dependency array.","ArrayExpression",["185"],"'setRender' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'lat', 'lng', and 'zoom'. Either include them or remove the dependency array.",["186"],"'setLat' is assigned a value but never used.","'setLng' is assigned a value but never used.","'popup' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'geojson.length', 'jsonToGeojson', 'loadMap', and 'merging'. Either include them or remove the dependency array.",["187"],"'hostingInfoCoordinates' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'myBookingData'. Either include it or remove the dependency array. You can also do a functional update 'setMyBookingData(m => ...)' if you only need 'myBookingData' in the 'setMyBookingData' call.",["188"],"'resp' is assigned a value but never used.","'resp1' is assigned a value but never used.","'Button' is defined but never used.","'history' is assigned a value but never used.","'renderList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.",["189"],"React Hook useEffect has a missing dependency: 'client.driver_uid'. Either include it or remove the dependency array.",["190"],"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [history, lat, lng, renderMap, user.uid, zoom]",{"range":"203","text":"204"},"Update the dependencies array to be: [lat, lng, zoom]",{"range":"205","text":"206"},"Update the dependencies array to be: [geojson.length, jsonToGeojson, loadMap, locationData.length, merging]",{"range":"207","text":"208"},"Update the dependencies array to be: [myBookingData, user.uid]",{"range":"209","text":"210"},"Update the dependencies array to be: [user.uid]",{"range":"211","text":"212"},"Update the dependencies array to be: [client.driver_uid]",{"range":"213","text":"214"},[4791,4802],"[history, lat, lng, renderMap, user.uid, zoom]",[2629,2631],"[lat, lng, zoom]",[15313,15334],"[geojson.length, jsonToGeojson, loadMap, locationData.length, merging]",[1811,1821],"[myBookingData, user.uid]",[1247,1249],"[user.uid]",[622,624],"[client.driver_uid]"]